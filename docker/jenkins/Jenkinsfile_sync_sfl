/*****************************************************************************
 * Copyright (C) 2021, RTE (http://www.rte-france.com)
 * SPDX-License-Identifier: CC-BY-4.0
 *
 * Jenkins pipeline for synchronizing Gerrit sfl/master with GitLab sfl/master.
 * It uses Poll SCM to check for Gerrit changes and trigger the sync.
 * Once the synchronization is done it triggers the 'ci' job.
 *
 * Requirements:
 * - SSH Agent Plugin
 * - Set SSH credentials ('gerrit-credentials' and 'gitlab-credentials')
 *****************************************************************************/

pipeline {
    agent any

    parameters {
        string(name: 'GERRIT_URL',
            defaultValue: 'g1.sfl.team:29419',
            description: 'Gerrit server URL')
        string(name: 'GERRIT_USER',
            defaultValue: 'rteci',
            description: 'User used to authentificate to the Gerrit server.')
        string(name: 'GITLAB_URL',
            defaultValue: '10.132.156.199:2200',
            description: 'GitLab server URL')
        string(name: 'GITLAB_USER',
            defaultValue: 'root',
            description: 'User used to authentificate to the GitLab server.')
    }

    // TODO: Add Gerrit and GitLab server fingerprints to known_hosts instead
    environment {
        GIT_SSH_COMMAND = "ssh -o StrictHostKeyChecking=no"
    }

    triggers {
        pollSCM "* * * * *"
    }

    stages {

        stage("Clean workspace") {
            steps {
                cleanWs()
            }
        }

        stage("Sync meta-seapath") {
            steps {
                dir("meta-seapath"){
                    git branch: 'sfl/master',
                    credentialsId: 'gerrit-credentials',
                    url: "ssh://${GERRIT_USER}@${GERRIT_URL}/rte/votp/meta-seapath"

                    sshagent(credentials : ['gitlab-credentials']) {
                        sh """
                            git remote add secondary \
                            "[git@${GITLAB_URL}]:${GITLAB_USER}/meta-seapath.git"
                            git fetch secondary sfl/master
                            git push secondary sfl/master
                        """
                    }
                }
            }
        }

        stage("Sync yocto-bsp") {
            steps {
                dir("yocto-bsp"){
                    git branch: 'sfl/master',
                    credentialsId: 'gerrit-credentials',
                    url: "ssh://${GERRIT_USER}@${GERRIT_URL}/rte/votp/yocto-bsp"

                    sshagent(credentials : ['gitlab-credentials']) {
                        sh """
                            git remote add secondary \
                            "[git@${GITLAB_URL}]:${GITLAB_USER}/yocto-bsp.git"
                            git fetch secondary sfl/master
                            git push secondary sfl/master
                        """
                    }
                }
            }
        }

        stage("Sync repo-manifest") {
            steps {
                dir("repo-manifest"){
                    git branch: 'sfl/master',
                    credentialsId: 'gerrit-credentials',
                    url: "ssh://${GERRIT_USER}@${GERRIT_URL}/rte/votp/repo-manifest"

                    sshagent(credentials : ['gitlab-credentials']) {
                        sh """
                            git remote add secondary \
                            "[git@${GITLAB_URL}]:${GITLAB_USER}/repo-manifest.git"
                            git fetch secondary sfl/master
                            git push secondary sfl/master
                        """
                    }
                }
            }
        }

        stage("Sync ansible") {
            steps {
                dir("ansible"){
                    git branch: 'sfl/master',
                    credentialsId: 'gerrit-credentials',
                    url: "ssh://${GERRIT_USER}@${GERRIT_URL}/rte/votp/ansible"

                    sshagent(credentials : ['gitlab-credentials']) {
                        sh """
                            git remote add secondary \
                            "[git@${GITLAB_URL}]:${GITLAB_USER}/ansible.git"
                            git fetch secondary sfl/master
                            git push secondary sfl/master
                        """
                    }
                }
            }
        }
    }

    post {
        success {
            echo "Synchronization finished, starting 'ci' job."
            build job: "ci"
        }

        failure {
            echo "Did not succeed!"
        }
    }
}